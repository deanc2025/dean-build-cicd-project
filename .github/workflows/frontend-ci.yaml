on:
  pull_request:
  workflow_dispatch:
  push:
    branches:
      - master

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'npm'
      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-
          
      - name: Install Dependencies
        run: cd starter/backend && npm ci
        
      - name: Run Linter
        run: cd starter/backend && npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: latest
          cache: 'npm'

      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-

      - name: Install Dependencies
        run: cd starter/backend && npm ci

      - name: Run Tests
        run: cd starter/backend && npm run test
        
  build:
    name: Build Application
    runs-on: ubuntu-latest
    
    needs: [test, lint]
    
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'

      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: npm-${{ runner.os }}-${{ hashFiles('package-lock.json') }}
          restore-keys: npm-${{ runner.os }}-

      - name: Install Dependencies
        run: cd starter/backend && npm ci

      - name: Run Tests
        run: cd starter/backend && npm run test

      - name: Build Image
        run: cd starter/backend && docker build -t frontend-app .
